
'''a=iter([11,22,33,44,55,66])
print(next(a))
print(next(a))
print(next(a))
print(next(a))
a=[11,22,33,44,55]
k=iter(a)
for _ in range(len(a)):
    print(next(k))
#TRNSFER STATEMENT
#break
for x in range(1,11):
    if x==7:
        print("hi",x)
        break
print(x)
a=[1,2,3,4,5,6]
for x in a:
    if x%2==0:
        print(x)
        break'''
'''
a=[1,2,3,4,5]
target=3
for x in a:
   if x==target:
    print(x)
    break'''
'''
l=[20,90,120,45,50]
for x in l:
    if x>=50:
        print(x)
        break
'''
'''
a='hello world'
for x in a:
    if x=='w':
        print(x)
        break
        
        
Here are 10 very simple Python programs that cover basic concepts and are easy to understand:

1. Print "Hello, World!"

print("Hello, World!")
Explanation: Prints a simple greeting.

2. Add Two Numbers
python
Copy code
a = 5
b = 3
sum = a + b
print("Sum:", sum)
Explanation: Adds two numbers and prints the result.

3. Check if a Number is Even or Odd
python
Copy code
num = int(input("Enter a number: "))
if num % 2 == 0:
    print("Even")
else:
    print("Odd")
Explanation: Checks whether a given number is even or odd.

4. Find the Largest of Three Numbers
python
Copy code
a = 5
b = 8
c = 3
if a > b and a > c:
    print("Largest:", a)
elif b > a and b > c:
    print("Largest:", b)
else:
    print("Largest:", c)
Explanation: Compares three numbers and prints the largest.

5. Check if a Number is Positive, Negative, or Zero
python
Copy code
num = int(input("Enter a number: "))
if num > 0:
    print("Positive")
elif num < 0:
    print("Negative")
else:
    print("Zero")
Explanation: Checks whether a number is positive, negative, or zero.

6. Reverse a String
python
Copy code
s = "hello"
reversed_s = s[::-1]
print("Reversed String:", reversed_s)
Explanation: Reverses a string and prints it.

7. Factorial of a Number
python
Copy code
num = 5
factorial = 1
for i in range(1, num + 1):
    factorial *= i
print("Factorial:", factorial)
Explanation: Calculates the factorial of a number using a loop.

8. Check if a Number is Prime
python
Copy code
num = 7
is_prime = True
for i in range(2, num):
    if num % i == 0:
        is_prime = False
        break
if is_prime:
    print("Prime")
else:
    print("Not Prime")
Explanation: Checks if a number is prime by testing divisibility.

9. Print the First 10 Natural Numbers
python
Copy code
for i in






You said:
by using break i want

ChatGPT said:
ChatGPT
Here are 10 simple Python programs that utilize the break statement:

1. Find the First Even Number
python
Copy code
numbers = [1, 3, 5, 6, 7, 9]
for num in numbers:
    if num % 2 == 0:
        print("First even number:", num)
        break
Explanation: Finds and prints the first even number in a list.

2. Check for a Specific Number
python
Copy code
numbers = [2, 4, 6, 8, 10]
target = 6
for num in numbers:
    if num == target:
        print(f"{target} found!")
        break
Explanation: Stops the loop when the target number is found.

3. Find the First Number Greater Than 50
python
Copy code
numbers = [10, 20, 30, 55, 70, 80]
for num in numbers:
    if num > 50:
        print("First number greater than 50:", num)
        break
Explanation: Finds the first number in the list that is greater than 50.

4. Search for a Character in a String
python
Copy code
text = "Hello World"
for char in text:
    if char == 'W':
        print("Found 'W' in the string!")
        break
Explanation: Stops the loop when the character 'W' is found in the string.

5. Stop Loop on Negative Number
python
Copy code
numbers = [3, 5, -1, 7, 9]
for num in numbers:
    if num < 0:
        print("Negative number found, stopping loop.")
        break
Explanation: Stops the loop when a negative number is encountered.

6. Count Until 5
python
Copy code
for i in range(1, 11):
    if i == 5:
        print("Reached 5, breaking the loop.")
        break
    print(i)
Explanation: Prints numbers from 1 to 4, then stops when reaching 5.

7. Find the First Prime Number
python
Copy code
numbers = [4, 6, 8, 9, 11, 13]
for num in numbers:
    for i in range(2, num):
        if num % i == 0:
            break
    else:
        print("First prime number:", num)
        break
Explanation: Finds and prints the first prime number in a list.

8. Check for a Specific Word in a Sentence
python
Copy code
sentence = "This is a simple sentence"
words = sentence.split()
for word in words:
    if word == "simple":
        print("Found the word 'simple'!")
        break
Explanation: Searches for and stops at the word "simple" in a sentence.

9. Break on a Specific Input
python
Copy code
while True:
    text = input("Type something (or 'exit' to stop): ")
    if text == 'exit':
        print("Exiting the loop.")
        break
Explanation: Repeatedly asks for input until the user types "exit".

10. Sum Numbers Until a Specific Value
python
Copy code
numbers = [1, 2, 3, 4, 5, 6]
total = 0
for num in numbers:
    if num == 5:
        break
    total += num
print("Sum of numbers until 5:", total)
Explanation: Sums numbers in a list until the number 5 is reached.
'''
'''
#********continue*****
for x in range(10):
    if x%2==0:
        continue
    else:
        print(x)
Here are 10 simple Python programs that utilize the continue statement:

1. Skip Even Numbers
python
Copy code
for num in range(1, 11):
    if num % 2 == 0:
        continue
    print(num)
Explanation: Skips even numbers and only prints odd numbers from 1 to 10.

2. Skip Multiples of 3
python
Copy code
for num in range(1, 11):
    if num % 3 == 0:
        continue
    print(num)
Explanation: Skips numbers that are multiples of 3 and prints the rest.

3. Skip Vowels in a String
python
Copy code
text = "Hello World"
for char in text:
    if char in 'aeiouAEIOU':
        continue
    print(char, end='')
Explanation: Skips vowels in the string and prints the remaining characters.

4. Skip Negative Numbers
python
Copy code
numbers = [3, -1, 5, -2, 7, -3]
for num in numbers:
    if num < 0:
        continue
    print(num)
Explanation: Skips negative numbers and prints only the positive ones.

5. Skip Certain Characters
python
Copy code
text = "Python Programming"
for char in text:
    if char in 'Pg':
        continue
    print(char, end='')
Explanation: Skips the characters 'P' and 'g' in the string and prints the rest.

6. Skip Specific Word in a Sentence
python
Copy code
sentence = "This is a simple Python program"
words = sentence.split()
for word in words:
    if word == "simple":
        continue
    print(word, end=' ')
Explanation: Skips the word "simple" and prints the rest of the words in the sentence.

7. Skip Numbers Greater Than 5
python
Copy code
for num in range(1, 11):
    if num > 5:
        continue
    print(num)
Explanation: Skips numbers greater than 5 and prints only numbers 1 to 5.

8. Skip Certain Index in a Loop
python
Copy code
for i in range(5):
    if i == 2:
        continue
    print(f"Index {i}")
Explanation: Skips index 2 and prints the other indices.

9. Skip a Specific Input
python
Copy code
for i in range(5):
    text = input("Type something (or 'skip' to continue): ")
    if text == 'skip':
        continue
    print(f"You typed: {text}")
Explanation: Skips processing when the user types "skip" and continues the loop.

10. Skip Non-Alphabet Characters
python
Copy code
text = "Hello123! World."
for char in text:
    if not char.isalpha():
        continue
    print(char, end='')
Explanation: Skips non-alphabet characters and prints only the letters in the string.
'''
'''
**********pass*****
Here are 10 simple Python programs that utilize the continue statement:

1. Skip Even Numbers
python
Copy code
for num in range(1, 11):
    if num % 2 == 0:
        continue
    print(num)
Explanation: Skips even numbers and only prints odd numbers from 1 to 10.

2. Skip Multiples of 3
python
Copy code
for num in range(1, 11):
    if num % 3 == 0:
        continue
    print(num)
Explanation: Skips numbers that are multiples of 3 and prints the rest.

3. Skip Vowels in a String
python
Copy code
text = "Hello World"
for char in text:
    if char in 'aeiouAEIOU':
        continue
    print(char, end='')
Explanation: Skips vowels in the string and prints the remaining characters.

4. Skip Negative Numbers
python
Copy code
numbers = [3, -1, 5, -2, 7, -3]
for num in numbers:
    if num < 0:
        continue
    print(num)
Explanation: Skips negative numbers and prints only the positive ones.

5. Skip Certain Characters
python
Copy code
text = "Python Programming"
for char in text:
    if char in 'Pg':
        continue
    print(char, end='')
Explanation: Skips the characters 'P' and 'g' in the string and prints the rest.

6. Skip Specific Word in a Sentence
python
Copy code
sentence = "This is a simple Python program"
words = sentence.split()
for word in words:
    if word == "simple":
        continue
    print(word, end=' ')
Explanation: Skips the word "simple" and prints the rest of the words in the sentence.

7. Skip Numbers Greater Than 5
python
Copy code
for num in range(1, 11):
    if num > 5:
        continue
    print(num)
Explanation: Skips numbers greater than 5 and prints only numbers 1 to 5.

8. Skip Certain Index in a Loop
python
Copy code
for i in range(5):
    if i == 2:
        continue
    print(f"Index {i}")
Explanation: Skips index 2 and prints the other indices.

9. Skip a Specific Input
python
Copy code
for i in range(5):
    text = input("Type something (or 'skip' to continue): ")
    if text == 'skip':
        continue
    print(f"You typed: {text}")
Explanation: Skips processing when the user types "skip" and continues the loop.

10. Skip Non-Alphabet Characters
python
Copy code
text = "Hello123! World."
for char in text:
    if not char.isalpha():
        continue
    print(char, end='')
Explanation: Skips non-alphabet characters and prints only the letters in the string.







You said:
i want pass 10 example
ChatGPT said:
ChatGPT
Here are 10 simple Python programs that utilize the pass statement:

1. Empty For Loop
python
Copy code
for i in range(5):
    pass
Explanation: A for loop that does nothing.

2. Placeholder Function
python
Copy code
def my_function():
    pass
Explanation: A function with no implementation, often used as a placeholder for future code.

3. Empty If-Else Block
python
Copy code
a = 10
if a > 5:
    pass
else:
    print("This won't be printed.")
Explanation: The if block does nothing due to the pass statement.

4. Empty Class
python
Copy code
class MyClass:
    pass
Explanation: A class with no attributes or methods, serving as a placeholder.

5. Incomplete While Loop
python
Copy code
while True:
    pass
Explanation: An infinite loop that does nothing (use with caution).

6. Skip a Block of Code
python
Copy code
for i in range(5):
    if i == 3:
        pass
    else:
        print(i)
Explanation: The loop skips the block where i == 3.

7. Pass in a Function Call
python
Copy code
def process_data(data):
    pass

process_data([1, 2, 3])
Explanation: A function is called, but the function itself does nothing due to pass.

8. Empty Try-Except Block
python
Copy code
try:
    x = 10 / 0
except ZeroDivisionError:
    pass
Explanation: The exception is caught, but nothing is done due to pass.

9. Pass in a Loop with a Condition
python
Copy code
for i in range(10):
    if i < 5:
        pass
    else:
        print(i)
Explanation: The loop does nothing for the first 5 iterations.

10. Empty Method in a Class
python
Copy code
class MyClass:
    def method(self):
        pass
Explanation: A method in a class that currently has no implementation.
'''



















